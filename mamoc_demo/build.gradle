apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "uk.ac.standrews.cs.mamoc"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // This is necessary to index the annotated classes in this module
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // for Completable Future backwards compatibility
    implementation 'net.sourceforge.streamsupport:streamsupport-cfuture:1.6.0'
    //ClassIndex for Annotation indexing
    implementation 'org.atteo.classindex:classindex:3.4'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


    implementation project(':mamoc_client')

    /* The reason we are including autobahn source code is that it does not support API < 24 due to
    Completable Future which is only available in JDK 8. We modify the CompletableFuture and other
    classes with backwards compatible streamsupport-cfuture library
    */
    implementation project(':autobahn')

}
